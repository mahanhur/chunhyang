<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chflower.mapper.ChartMapper">

    <select id="select" parameterType="Integer" resultType="chart">
    </select>

    <select id="selectall" resultType="chart">
    </select>

    <select id="subsamounttop10" resultType="chart">
        select rownum, s.subsitem_id, s.subsitem_name, s.cnt as subs_cnt, s.subsitem_price, s.amount as subs_amount
        from (
                 select c.subsitem_id, t.subsitem_name, c.cnt, t.subsitem_price, c.cnt*t.subsitem_price as amount
                 from (
                          SELECT subsitem_id, COUNT(subs_id) AS cnt
                          FROM subsinfo
                          GROUP BY subsitem_id
                      ) c left join subsitem t on c.subsitem_id = t.subsitem_id
                 order by c.cnt desc
             ) s WHERE ROWNUM <![CDATA[<=]]> 10
    </select>

    <select id="itemamounttop10" resultType="chart">
        select rownum, s.item_id, s.item_name, s.cnt as item_cnt , s.item_price, s.amount as item_amount
        from(
                select i.item_id, t.item_name, i.cnt, t.item_price, i.cnt*t.item_price as amount
                from (select item_id, sum(order_cnt) as cnt
                      from orderdetail
                      group by item_id
                     ) i left join item t on i.item_id = t.item_id
                order by amount desc
            ) s WHERE ROWNUM <![CDATA[<=]]> 10
    </select>


    <select id="itemtop10" parameterType="chart" resultType="chart">
        SELECT rownum, s.item_id, s.item_name, s.item_cnt, s.item_price, s.item_amount
        FROM (
        SELECT i.item_id, t.item_name, i.cnt AS item_cnt, t.item_price, i.cnt * t.item_price AS item_amount
        FROM (
        SELECT item_id, SUM(order_cnt) AS cnt
        FROM orderdetail
        WHERE order_id IN (
        SELECT order_id
        FROM item_order
        WHERE to_char(order_date, 'yyyy-MM-dd') BETWEEN to_char(#{date1}, 'yyyy-MM-dd') AND to_char(#{date2}, 'yyyy-MM-dd')
        )
        GROUP BY item_id
        ) i
        LEFT JOIN item t ON i.item_id = t.item_id
        ORDER BY item_amount DESC
        ) s
        WHERE ROWNUM <![CDATA[<=]]> 10
    </select>

    <select id="subsamountworst10" resultType="chart">
        select rownum, s.subsitem_id, s.subsitem_name, s.cnt as subs_cnt, s.subsitem_price, s.amount as subs_amount
        from (
                 select c.subsitem_id, t.subsitem_name, c.cnt, t.subsitem_price, c.cnt*t.subsitem_price as amount
                 from (
                          SELECT subsitem_id, COUNT(subs_id) AS cnt
                          FROM subsinfo
                          GROUP BY subsitem_id
                      ) c left join subsitem t on c.subsitem_id = t.subsitem_id
                 order by c.cnt
             ) s WHERE ROWNUM <![CDATA[<=]]> 10
    </select>

    <select id="itemamountworst10" resultType="chart">
        select rownum, s.item_id, s.item_name, s.cnt as item_cnt , s.item_price, s.amount as item_amount
        from(
                select i.item_id, t.item_name, i.cnt, t.item_price, i.cnt*t.item_price as amount
                from (select item_id, sum(order_cnt) as cnt
                      from orderdetail
                      group by item_id
                     ) i left join item t on i.item_id = t.item_id
                order by amount
            ) s WHERE ROWNUM <![CDATA[<=]]> 10
    </select>

    <select id="substotal" parameterType="chart" resultType="int">
        select sum(subs_pay_amount) as substotal
        from subsinfo
        where to_char(subs_rdate,'yyyy-MM-dd') between to_char(#{date1},'yyyy-MM-dd') and to_char(#{date2},'yyyy-MM-dd')
    </select>

    <select id="itemtotal" parameterType="chart" resultType="int">
        select sum(pay_amount) as itemtotal
        from item_order
        where to_char(order_date,'yyyy-MM-dd') between to_char(#{date1},'yyyy-MM-dd') and to_char(#{date2},'yyyy-MM-dd')
    </select>

    <select id="custcount" parameterType="chart" resultType="int">
        select count(cust_id) as custcount
        from cust
        where to_char(cust_rdate,'yyyy-MM-dd') between to_char(#{date1},'yyyy-MM-dd') and to_char(#{date2},'yyyy-MM-dd')
    </select>

    <select id="delfincount" parameterType="chart" resultType="int">
        select count(del_id) as delfincount
        from delinfo
        where to_char(del_findate,'yyyy-MM-dd') between to_char(#{date1},'yyyy-MM-dd') and to_char(#{date2},'yyyy-MM-dd')
    </select>

    <select id="reviewcount" parameterType="chart" resultType="int">
        select count(review_id) as reviewcount
        from item_review
        where to_char(review_rdata,'yyyy-MM-dd') between to_char(#{date1},'yyyy-MM-dd') and to_char(#{date2},'yyyy-MM-dd')
    </select>

    <select id="reviewscore" parameterType="chart" resultType="double">
        select avg(review_score) as reviewscore
        from item_review
        where to_char(review_rdata,'yyyy-MM-dd') between to_char(#{date1},'yyyy-MM-dd') and to_char(#{date2},'yyyy-MM-dd')
    </select>

    <select id="mantotalsales" parameterType="chart" resultType="int">
        SELECT sum(b.total_payment) as paid
        FROM cust c LEFT OUTER JOIN (SELECT
                    COALESCE(io.CUST_ID, s.CUST_ID) AS cust_id,
                    COALESCE(io.ORDER_DATE, s.SUBS_RDATE) AS rdate,
                    COALESCE(io.PAY_AMOUNT, 0) + COALESCE(s.SUBS_PAY_AMOUNT, 0) AS total_payment
                FROM item_order io
                FULL OUTER JOIN
                subsinfo s ON io.CUST_ID = s.CUST_ID AND io.ORDER_DATE = s.SUBS_RDATE
                ) b ON c.cust_id = b.cust_id
        where  to_char(b.rdate,'yyyy-MM-dd') between to_char(#{date1},'yyyy-MM-dd') and to_char(#{date2},'yyyy-MM-dd')        and c.gender =1
--         group by c.gender
    </select>

    <select id="womantotalsales" parameterType="chart" resultType="int">
        SELECT sum(b.total_payment) as paid
        FROM cust c LEFT OUTER JOIN (SELECT
                                         COALESCE(io.CUST_ID, s.CUST_ID) AS cust_id,
                                         COALESCE(io.ORDER_DATE, s.SUBS_RDATE) AS rdate,
                                         COALESCE(io.PAY_AMOUNT, 0) + COALESCE(s.SUBS_PAY_AMOUNT, 0) AS total_payment
                                     FROM item_order io
                                              FULL OUTER JOIN
                                          subsinfo s ON io.CUST_ID = s.CUST_ID AND io.ORDER_DATE = s.SUBS_RDATE
        ) b ON c.cust_id = b.cust_id
        where  to_char(b.rdate,'yyyy-MM-dd') between to_char(#{date1},'yyyy-MM-dd') and to_char(#{date2},'yyyy-MM-dd')        and c.gender =2
--         group by c.gender
    </select>

</mapper>